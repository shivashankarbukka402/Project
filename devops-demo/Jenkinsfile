pipeline {
    agent any

    tools {
        maven 'Maven'
        jdk 'Java11'
    }

    environment {
        GIT_URL        = 'https://github.com/shivashankarbukka402/devops-demo.git'
        GIT_BRANCH     = 'main'
        GIT_CREDENTIALS = 'shivashankarbukka402'
        DOCKER_USER = 'shiva9828'
        IMAGE_NAME = 'shiva9828/my-java-app'
        IMAGE_TAG = 'latest'
        DOCKERFILE_BASE = 'Dockerfile'
        DOCKER_REGISTRY_CRED_ID = 'docker_token'
        
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: "${env.GIT_BRANCH}",
                    credentialsId: "${env.GIT_CREDENTIALS}",
                    url: "${env.GIT_URL}"
            }
        }
        stage('Docker Build and Push') {
           stage('Docker Build and Push') {
                steps {
                     withCredentials([string(credentialsId: 'dockerhub-pass', variable: 'DOCKER_PASS')]) {
                       sh '''
                            docker build -t shiva9828/devops-demo:latest .
                            echo $DOCKER_PASS | docker login -u shiva9828 --password-stdin
                            docker push shiva9828/devops-demo:latest
                          '''
                    }      
                }
            }
        }       
            

        

        stage('Deploy to EC2') {
            steps {
                sshagent(['ec2-ssh-key']) {
                    sh '''
                    ssh -o StrictHostKeyChecking=no ubuntu@43.205.217.170"
                        docker pull ${DOCKER_USER}/${IMAGE_NAME}:latest &&
                        docker stop app || true &&
                        docker rm app || true &&
                        docker run -d --name app -p 8080:8080 ${DOCKER_USER}/${IMAGE_NAME}:latest
                    "
                    '''
                }
            }
        }
    }
}
